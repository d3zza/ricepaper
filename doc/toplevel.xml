<asdoc>

<interfaceRec name='MouseWheelListener' fullname='com.dezza.ricepaper.ui.mousewheel:MouseWheelListener' sourcefile='/Users/derek/Documents/work/libraries/as3/ricepaper.dezza.com/src/com/dezza/ricepaper/ui/mousewheel/MouseWheelListener.as' namespace='com.dezza.ricepaper.ui.mousewheel' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[
  ]]></description>
<author><![CDATA[derek
  
  Classes wishing to listen to be added as listeners of MouseWheel mouse wheel events should implement this 
  ]]></author>
</interfaceRec>
<method name='onMouseWheel' fullname='com.dezza.ricepaper.ui.mousewheel:MouseWheelListener/com.dezza.ricepaper.ui.mousewheel:MouseWheelListener:onMouseWheel' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='com.dezza.ricepaper.ui.mousewheel:MouseWheelEvent' param_defaults='undefined' result_type='void'>
</method>
<classRec name='MouseWheelEvent' fullname='com.dezza.ricepaper.ui.mousewheel:MouseWheelEvent' sourcefile='/Users/derek/Documents/work/libraries/as3/ricepaper.dezza.com/src/com/dezza/ricepaper/ui/mousewheel/MouseWheelEvent.as' namespace='com.dezza.ricepaper.ui.mousewheel' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
<description><![CDATA[
  ]]></description>
<author><![CDATA[derek
  ]]></author>
</classRec>
<method name='MouseWheelEvent' fullname='com.dezza.ricepaper.ui.mousewheel:MouseWheelEvent/MouseWheelEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='type;x;y;delta;bubbles;cancelable' param_types='String;Number;Number;Number;Boolean;Boolean' param_defaults='undefined;undefined;undefined;undefined;false;false' result_type='*'>
<description><![CDATA[
   Construct a new MouseWheelEvent instance
   ]]></description>
</method>
<method name='clone' fullname='com.dezza.ricepaper.ui.mousewheel:MouseWheelEvent/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.events:Event'>
<description><![CDATA[
   ]]></description>
</method>
<method name='delta' fullname='com.dezza.ricepaper.ui.mousewheel:MouseWheelEvent/delta/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[
   delta
   
   ]]></description>
<return><![CDATA[mouse wheel scroll delta
   ]]></return>
</method>
<method name='x' fullname='com.dezza.ricepaper.ui.mousewheel:MouseWheelEvent/x/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[
   mouse X position
   
   ]]></description>
<return><![CDATA[Number position in pixels
   ]]></return>
</method>
<method name='y' fullname='com.dezza.ricepaper.ui.mousewheel:MouseWheelEvent/y/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[
   mouse Y position
   
   ]]></description>
<return><![CDATA[Number postion in pixels
   ]]></return>
</method>
<field name='MOUSE_WHEEL' fullname='com.dezza.ricepaper.ui.mousewheel:MouseWheelEvent/MOUSE_WHEEL' type='String' isStatic='true' isConst='true' defaultValue='MouseWheelEvent.MOUSE_WHEEL' >
<description><![CDATA[
   Event type representing MouseWheel scroll
   ]]></description>
</field>
<field name='_delta' fullname='com.dezza.ricepaper.ui.mousewheel:MouseWheelEvent/private:_delta' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[
   ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_x' fullname='com.dezza.ricepaper.ui.mousewheel:MouseWheelEvent/private:_x' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[
   ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_y' fullname='com.dezza.ricepaper.ui.mousewheel:MouseWheelEvent/private:_y' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[
   ]]></description>
<private><![CDATA[]]></private>
</field>
<classRec name='MouseWheelJSBridge' fullname='com.dezza.ricepaper.ui.mousewheel:MouseWheelJSBridge' sourcefile='/Users/derek/Documents/work/libraries/as3/ricepaper.dezza.com/src/com/dezza/ricepaper/ui/mousewheel/MouseWheelJSBridge.as' namespace='com.dezza.ricepaper.ui.mousewheel' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[
  Class that wraps javascript code for providing cross platform MouseWheel support
  ]]></description>
</classRec>
<method name='MouseWheelJSBridge' fullname='com.dezza.ricepaper.ui.mousewheel:MouseWheelJSBridge/MouseWheelJSBridge' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[
   ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='NS' fullname='com.dezza.ricepaper.ui.mousewheel:MouseWheelJSBridge/NS' type='String' isStatic='true' isConst='true' defaultValue='MWAS' >
<description><![CDATA[
   ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='script_js' fullname='com.dezza.ricepaper.ui.mousewheel:MouseWheelJSBridge/private:script_js' type='XML' isStatic='false' isConst='true' defaultValue='unknown' >
<description><![CDATA[
   ]]></description>
<private><![CDATA[]]></private>
</field>
<classRec name='MouseWheel' fullname='com.dezza.ricepaper.ui.mousewheel:MouseWheel' sourcefile='/Users/derek/Documents/work/libraries/as3/ricepaper.dezza.com/src/com/dezza/ricepaper/ui/mousewheel/MouseWheel.as' namespace='com.dezza.ricepaper.ui.mousewheel' access='public' baseclass='flash.events:EventDispatcher' isFinal='false' isDynamic='false' >
<description><![CDATA[
  ]]></description>
<author><![CDATA[derek
  
  Utility to provide cross platform (Mac OS X) mousewheel support (requires javascript / ExternalInterface)
  
  ]]></author>
</classRec>
<method name='MouseWheel' fullname='com.dezza.ricepaper.ui.mousewheel:MouseWheel/MouseWheel' isStatic='false' isFinal='false' isOverride='false'  param_names='access' param_types='MouseWheel.as$19:ConstructorAccess' param_defaults='undefined' result_type='*'>
<description><![CDATA[
   ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='addMouseWheelListener' fullname='com.dezza.ricepaper.ui.mousewheel:MouseWheel/addMouseWheelListener' isStatic='false' isFinal='false' isOverride='false'  param_names='listener' param_types='com.dezza.ricepaper.ui.mousewheel:MouseWheelListener' param_defaults='undefined' result_type='void'>
<description><![CDATA[
   add a listener for MouseWheel events
   
   ]]></description>
<param><![CDATA[listener <code>com.dezza.ricepaper.ui.mousewheel.MouseWheelListener</code> implementation
   ]]></param>
</method>
<method name='destroy' fullname='com.dezza.ricepaper.ui.mousewheel:MouseWheel/destroy' isStatic='true' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
   destroy the MouseWheel instance
   ]]></description>
</method>
<method name='dispatchScrollWheel' fullname='com.dezza.ricepaper.ui.mousewheel:MouseWheel/dispatchScrollWheel' isStatic='false' isFinal='false' isOverride='false'  param_names='delta' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[
   ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getInstance' fullname='com.dezza.ricepaper.ui.mousewheel:MouseWheel/getInstance' isStatic='true' isFinal='false' isOverride='false'  result_type='com.dezza.ricepaper.ui.mousewheel:MouseWheel'>
<description><![CDATA[
   Get the MouseWheel instance
   
   note you must call init() and pass a valid stage instance before MouseWheel will start working
   
   ]]></description>
<return><![CDATA[MouseWheel instance (Singleton)  
   ]]></return>
</method>
<method name='init' fullname='com.dezza.ricepaper.ui.mousewheel:MouseWheel/init' isStatic='false' isFinal='false' isOverride='false'  param_names='stage' param_types='flash.display:DisplayObject' param_defaults='null' result_type='void'>
<description><![CDATA[
   initialise MouseWheel instance
   
   ]]></description>
<param><![CDATA[stage DisplayObject (mouse positions will be calculated relative to this)
   ]]></param>
</method>
<method name='lockBrowserScroll' fullname='com.dezza.ricepaper.ui.mousewheel:MouseWheel/lockBrowserScroll' isStatic='false' isFinal='false' isOverride='false'  param_names='lock' param_types='Boolean' param_defaults='undefined' result_type='void'>
<description><![CDATA[
   prevent MouseWheel scrolling from scrolling the containing web page as well
   
   ]]></description>
<param><![CDATA[lock Boolean true to lock, false to unlock
   ]]></param>
</method>
<method name='removeMouseWheelListener' fullname='com.dezza.ricepaper.ui.mousewheel:MouseWheel/removeMouseWheelListener' isStatic='false' isFinal='false' isOverride='false'  param_names='listener' param_types='com.dezza.ricepaper.ui.mousewheel:MouseWheelListener' param_defaults='undefined' result_type='void'>
<description><![CDATA[
   remove a listener for MouseWheel events
   
   ]]></description>
<param><![CDATA[listener <code>com.dezza.ricepaper.ui.mousewheel.MouseWheelListener</code> implementation
   ]]></param>
</method>
<field name='_instance' fullname='com.dezza.ricepaper.ui.mousewheel:MouseWheel/private:_instance' type='com.dezza.ricepaper.ui.mousewheel:MouseWheel' isStatic='true' isConst='false' >
<description><![CDATA[
   ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_stage' fullname='com.dezza.ricepaper.ui.mousewheel:MouseWheel/private:_stage' type='flash.display:DisplayObject' isStatic='false' isConst='false' >
<description><![CDATA[
   ]]></description>
<private><![CDATA[]]></private>
</field>
<classRec name='MouseOverHelper' fullname='com.dezza.ricepaper.ui.mousewheel:MouseOverHelper' sourcefile='/Users/derek/Documents/work/libraries/as3/ricepaper.dezza.com/src/com/dezza/ricepaper/ui/mousewheel/MouseOverHelper.as' namespace='com.dezza.ricepaper.ui.mousewheel' access='public' baseclass='flash.display:Sprite' isFinal='false' isDynamic='false' >
<description><![CDATA[
  ]]></description>
<author><![CDATA[derek
  
  This is a helper class for the MouseWheel class to notifiy MouseWheel whether mouse is currently over a target display object
  
  Behaves in the way a rolled over sprite behaves i.e. can be 
  obstructed by other display objects in front
  ]]></author>
</classRec>
<method name='MouseOverHelper' fullname='com.dezza.ricepaper.ui.mousewheel:MouseOverHelper/MouseOverHelper' isStatic='false' isFinal='false' isOverride='false'  param_names='target' param_types='flash.display:DisplayObject' param_defaults='null' result_type='*'>
<description><![CDATA[
   Create a MouseOverHelper instance
   
   ]]></description>
<param><![CDATA[target DisplayObject
   ]]></param>
</method>
<method name='addMouseListeners' fullname='com.dezza.ricepaper.ui.mousewheel:MouseOverHelper/private:addMouseListeners' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
   ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='destroy' fullname='com.dezza.ricepaper.ui.mousewheel:MouseOverHelper/destroy' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
   prepare instance for GC
   ]]></description>
</method>
<method name='onRollOutTarget' fullname='com.dezza.ricepaper.ui.mousewheel:MouseOverHelper/private:onRollOutTarget' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[
   ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='onRollOverTarget' fullname='com.dezza.ricepaper.ui.mousewheel:MouseOverHelper/private:onRollOverTarget' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[
   ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='removeMouseListeners' fullname='com.dezza.ricepaper.ui.mousewheel:MouseOverHelper/private:removeMouseListeners' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
   ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='toString' fullname='com.dezza.ricepaper.ui.mousewheel:MouseOverHelper/toString' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
<description><![CDATA[
   get string representation of this instance
   
   ]]></description>
<return><![CDATA[String
   ]]></return>
</method>
<method name='autolockBrowserScroll' fullname='com.dezza.ricepaper.ui.mousewheel:MouseOverHelper/autolockBrowserScroll/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[
   get the autoLockBrowserScroll setting
   
   ]]></description>
<return><![CDATA[Boolean true if scroll is locked
   ]]></return>
</method>
<method name='mouseIsOver' fullname='com.dezza.ricepaper.ui.mousewheel:MouseOverHelper/mouseIsOver/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ 
   returns true if the mouse is rolled over the target
   ]]></description>
<param><![CDATA[e MouseEvent (with stage coords)
   ]]></param>
<return><![CDATA[true is mouse is over target
   ]]></return>
</method>
<method name='mouseTarget' fullname='com.dezza.ricepaper.ui.mousewheel:MouseOverHelper/mouseTarget/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.display:DisplayObject'>
<description><![CDATA[
   get the target mouse over object
   
   ]]></description>
<return><![CDATA[DisplayObject
   ]]></return>
</method>
<method name='autolockBrowserScroll' fullname='com.dezza.ricepaper.ui.mousewheel:MouseOverHelper/autolockBrowserScroll/set' isStatic='false' isFinal='false' isOverride='false'  param_names='b' param_types='Boolean' param_defaults='undefined' result_type='void'>
<description><![CDATA[
   set whether the containing html page should lock browser scroll
   while the user is mousewheeling over this flash object
   
   ]]></description>
<param><![CDATA[b Boolean true to lock browser scroll
   ]]></param>
</method>
<method name='mouseTarget' fullname='com.dezza.ricepaper.ui.mousewheel:MouseOverHelper/mouseTarget/set' isStatic='false' isFinal='false' isOverride='false'  param_names='t' param_types='flash.display:DisplayObject' param_defaults='undefined' result_type='void'>
<description><![CDATA[
   set the mouse over target object (to mouse wheel over)
   
   ]]></description>
<param><![CDATA[t DisplayObject
   ]]></param>
</method>
<field name='_lockBrowserScroll' fullname='com.dezza.ricepaper.ui.mousewheel:MouseOverHelper/private:_lockBrowserScroll' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
<description><![CDATA[
   ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_mouseIsOverTarget' fullname='com.dezza.ricepaper.ui.mousewheel:MouseOverHelper/private:_mouseIsOverTarget' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
<description><![CDATA[
   ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_target' fullname='com.dezza.ricepaper.ui.mousewheel:MouseOverHelper/private:_target' type='flash.display:DisplayObject' isStatic='false' isConst='false' >
<description><![CDATA[
   ]]></description>
<private><![CDATA[]]></private>
</field>
<interfaceRec name='IEnableable' fullname='com.dezza.ricepaper.ui.core:IEnableable' sourcefile='/Users/derek/Documents/work/libraries/as3/ricepaper.dezza.com/src/com/dezza/ricepaper/ui/core/IEnableable.as' namespace='com.dezza.ricepaper.ui.core' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[
  ]]></description>
<author><![CDATA[derek
  ]]></author>
</interfaceRec>
<method name='enabled' fullname='com.dezza.ricepaper.ui.core:IEnableable/com.dezza.ricepaper.ui.core:IEnableable:enabled/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[
   get enabled
   
   ]]></description>
<return><![CDATA[Boolean true if enabled
   ]]></return>
</method>
<method name='enabled' fullname='com.dezza.ricepaper.ui.core:IEnableable/com.dezza.ricepaper.ui.core:IEnableable:enabled/set' isStatic='false' isFinal='false' isOverride='false'  param_names='enabled' param_types='Boolean' param_defaults='undefined' result_type='void'>
<description><![CDATA[
   set enabled
   
   ]]></description>
<param><![CDATA[enabled Boolean
   ]]></param>
</method>
<interfaceRec name='ISelectable' fullname='com.dezza.ricepaper.ui.core:ISelectable' sourcefile='/Users/derek/Documents/work/libraries/as3/ricepaper.dezza.com/src/com/dezza/ricepaper/ui/core/ISelectable.as' namespace='com.dezza.ricepaper.ui.core' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[
  ]]></description>
<author><![CDATA[derek
  ]]></author>
</interfaceRec>
<method name='selected' fullname='com.dezza.ricepaper.ui.core:ISelectable/com.dezza.ricepaper.ui.core:ISelectable:selected/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[
   get selected
   
   ]]></description>
<return><![CDATA[Boolean
   ]]></return>
</method>
<method name='selected' fullname='com.dezza.ricepaper.ui.core:ISelectable/com.dezza.ricepaper.ui.core:ISelectable:selected/set' isStatic='false' isFinal='false' isOverride='false'  param_names='selected' param_types='Boolean' param_defaults='undefined' result_type='void'>
<description><![CDATA[
   set selected
   
   ]]></description>
<param><![CDATA[selected Boolean
   ]]></param>
</method>
<interfaceRec name='IHighlightable' fullname='com.dezza.ricepaper.ui.core:IHighlightable' sourcefile='/Users/derek/Documents/work/libraries/as3/ricepaper.dezza.com/src/com/dezza/ricepaper/ui/core/IHighlightable.as' namespace='com.dezza.ricepaper.ui.core' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[
  ]]></description>
<author><![CDATA[derek
  ]]></author>
</interfaceRec>
<method name='highlighted' fullname='com.dezza.ricepaper.ui.core:IHighlightable/com.dezza.ricepaper.ui.core:IHighlightable:highlighted/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[
   get highlighted
   
   ]]></description>
<return><![CDATA[Boolean
   ]]></return>
</method>
<method name='highlighted' fullname='com.dezza.ricepaper.ui.core:IHighlightable/com.dezza.ricepaper.ui.core:IHighlightable:highlighted/set' isStatic='false' isFinal='false' isOverride='false'  param_names='highlighted' param_types='Boolean' param_defaults='undefined' result_type='void'>
<description><![CDATA[
   set highlighted
   
   ]]></description>
<param><![CDATA[highlighted Boolean
   ]]></param>
</method>
<interfaceRec name='ILabel' fullname='com.dezza.ricepaper.ui.core:ILabel' sourcefile='/Users/derek/Documents/work/libraries/as3/ricepaper.dezza.com/src/com/dezza/ricepaper/ui/core/ILabel.as' namespace='com.dezza.ricepaper.ui.core' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[
  ]]></description>
<author><![CDATA[derek
  ]]></author>
</interfaceRec>
<method name='text' fullname='com.dezza.ricepaper.ui.core:ILabel/com.dezza.ricepaper.ui.core:ILabel:text/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
   get label text
   
   ]]></description>
<return><![CDATA[String
   ]]></return>
</method>
<method name='textField' fullname='com.dezza.ricepaper.ui.core:ILabel/com.dezza.ricepaper.ui.core:ILabel:textField/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.text:TextField'>
<description><![CDATA[
   get textfield
   
   ]]></description>
<return><![CDATA[TextField
   ]]></return>
</method>
<method name='text' fullname='com.dezza.ricepaper.ui.core:ILabel/com.dezza.ricepaper.ui.core:ILabel:text/set' isStatic='false' isFinal='false' isOverride='false'  param_names='text' param_types='String' param_defaults='undefined' result_type='void'>
<description><![CDATA[
   set label text
   
   ]]></description>
<param><![CDATA[text String
   ]]></param>
</method>
<interfaceRec name='IDisplayObject' fullname='com.dezza.ricepaper.ui.core:IDisplayObject' sourcefile='/Users/derek/Documents/work/libraries/as3/ricepaper.dezza.com/src/com/dezza/ricepaper/ui/core/IDisplayObject.as' namespace='com.dezza.ricepaper.ui.core' access='public' baseClasses='flash.events:IEventDispatcher;flash.display:IBitmapDrawable' isFinal='false' isDynamic='false' >
<description><![CDATA[
  ]]></description>
<author><![CDATA[derek
  ]]></author>
</interfaceRec>
<method name='getBounds' fullname='com.dezza.ricepaper.ui.core:IDisplayObject/com.dezza.ricepaper.ui.core:IDisplayObject:getBounds' isStatic='false' isFinal='false' isOverride='false'  param_names='targetCoordinateSpace' param_types='flash.display:DisplayObject' param_defaults='undefined' result_type='flash.geom:Rectangle'>
</method>
<method name='getRect' fullname='com.dezza.ricepaper.ui.core:IDisplayObject/com.dezza.ricepaper.ui.core:IDisplayObject:getRect' isStatic='false' isFinal='false' isOverride='false'  param_names='targetCoordinateSpace' param_types='flash.display:DisplayObject' param_defaults='undefined' result_type='flash.geom:Rectangle'>
</method>
<method name='globalToLocal' fullname='com.dezza.ricepaper.ui.core:IDisplayObject/com.dezza.ricepaper.ui.core:IDisplayObject:globalToLocal' isStatic='false' isFinal='false' isOverride='false'  param_names='point' param_types='flash.geom:Point' param_defaults='undefined' result_type='flash.geom:Point'>
</method>
<method name='hitTestObject' fullname='com.dezza.ricepaper.ui.core:IDisplayObject/com.dezza.ricepaper.ui.core:IDisplayObject:hitTestObject' isStatic='false' isFinal='false' isOverride='false'  param_names='obj' param_types='flash.display:DisplayObject' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='hitTestPoint' fullname='com.dezza.ricepaper.ui.core:IDisplayObject/com.dezza.ricepaper.ui.core:IDisplayObject:hitTestPoint' isStatic='false' isFinal='false' isOverride='false'  param_names='x;y;shapeFlag' param_types='Number;Number;Boolean' param_defaults='undefined;undefined;false' result_type='Boolean'>
</method>
<method name='localToGlobal' fullname='com.dezza.ricepaper.ui.core:IDisplayObject/com.dezza.ricepaper.ui.core:IDisplayObject:localToGlobal' isStatic='false' isFinal='false' isOverride='false'  param_names='point' param_types='flash.geom:Point' param_defaults='undefined' result_type='flash.geom:Point'>
</method>
<method name='accessibilityProperties' fullname='com.dezza.ricepaper.ui.core:IDisplayObject/com.dezza.ricepaper.ui.core:IDisplayObject:accessibilityProperties/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.accessibility:AccessibilityProperties'>
<description><![CDATA[
   Workaround to provide a DisplayObject interface
   
   <p>Vote for Adobe to improve AS3 by adding a DisplayObject interface here:<br/>
   <a href='http://bugs.adobe.com/jira/browse/ASL-45' >http://bugs.adobe.com/jira/browse/ASL-45</a></p>
   
   <p>This allows us to work with implentations as assuming they are DisplayObjects.
   Please note that there is no guarantee that they actually are. It's up to implementations
   to ensure they inherit from DisplayObject</p>
   
   <p>Furthermore, you will still have to cast implementations to DisplayObject to add them to
   other DisplayObjectContainers</p>
   ]]></description>
</method>
<method name='alpha' fullname='com.dezza.ricepaper.ui.core:IDisplayObject/com.dezza.ricepaper.ui.core:IDisplayObject:alpha/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='blendMode' fullname='com.dezza.ricepaper.ui.core:IDisplayObject/com.dezza.ricepaper.ui.core:IDisplayObject:blendMode/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='cacheAsBitmap' fullname='com.dezza.ricepaper.ui.core:IDisplayObject/com.dezza.ricepaper.ui.core:IDisplayObject:cacheAsBitmap/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='filters' fullname='com.dezza.ricepaper.ui.core:IDisplayObject/com.dezza.ricepaper.ui.core:IDisplayObject:filters/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
</method>
<method name='height' fullname='com.dezza.ricepaper.ui.core:IDisplayObject/com.dezza.ricepaper.ui.core:IDisplayObject:height/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='loaderInfo' fullname='com.dezza.ricepaper.ui.core:IDisplayObject/com.dezza.ricepaper.ui.core:IDisplayObject:loaderInfo/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.display:LoaderInfo'>
</method>
<method name='mask' fullname='com.dezza.ricepaper.ui.core:IDisplayObject/com.dezza.ricepaper.ui.core:IDisplayObject:mask/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.display:DisplayObject'>
</method>
<method name='mouseX' fullname='com.dezza.ricepaper.ui.core:IDisplayObject/com.dezza.ricepaper.ui.core:IDisplayObject:mouseX/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='mouseY' fullname='com.dezza.ricepaper.ui.core:IDisplayObject/com.dezza.ricepaper.ui.core:IDisplayObject:mouseY/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='name' fullname='com.dezza.ricepaper.ui.core:IDisplayObject/com.dezza.ricepaper.ui.core:IDisplayObject:name/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='opaqueBackground' fullname='com.dezza.ricepaper.ui.core:IDisplayObject/com.dezza.ricepaper.ui.core:IDisplayObject:opaqueBackground/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Object'>
</method>
<method name='parent' fullname='com.dezza.ricepaper.ui.core:IDisplayObject/com.dezza.ricepaper.ui.core:IDisplayObject:parent/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.display:DisplayObjectContainer'>
</method>
<method name='root' fullname='com.dezza.ricepaper.ui.core:IDisplayObject/com.dezza.ricepaper.ui.core:IDisplayObject:root/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.display:DisplayObject'>
</method>
<method name='rotation' fullname='com.dezza.ricepaper.ui.core:IDisplayObject/com.dezza.ricepaper.ui.core:IDisplayObject:rotation/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='scale9Grid' fullname='com.dezza.ricepaper.ui.core:IDisplayObject/com.dezza.ricepaper.ui.core:IDisplayObject:scale9Grid/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.geom:Rectangle'>
</method>
<method name='scaleX' fullname='com.dezza.ricepaper.ui.core:IDisplayObject/com.dezza.ricepaper.ui.core:IDisplayObject:scaleX/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='scaleY' fullname='com.dezza.ricepaper.ui.core:IDisplayObject/com.dezza.ricepaper.ui.core:IDisplayObject:scaleY/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='scrollRect' fullname='com.dezza.ricepaper.ui.core:IDisplayObject/com.dezza.ricepaper.ui.core:IDisplayObject:scrollRect/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.geom:Rectangle'>
</method>
<method name='stage' fullname='com.dezza.ricepaper.ui.core:IDisplayObject/com.dezza.ricepaper.ui.core:IDisplayObject:stage/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.display:Stage'>
</method>
<method name='transform' fullname='com.dezza.ricepaper.ui.core:IDisplayObject/com.dezza.ricepaper.ui.core:IDisplayObject:transform/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.geom:Transform'>
</method>
<method name='visible' fullname='com.dezza.ricepaper.ui.core:IDisplayObject/com.dezza.ricepaper.ui.core:IDisplayObject:visible/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='width' fullname='com.dezza.ricepaper.ui.core:IDisplayObject/com.dezza.ricepaper.ui.core:IDisplayObject:width/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='x' fullname='com.dezza.ricepaper.ui.core:IDisplayObject/com.dezza.ricepaper.ui.core:IDisplayObject:x/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='y' fullname='com.dezza.ricepaper.ui.core:IDisplayObject/com.dezza.ricepaper.ui.core:IDisplayObject:y/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='accessibilityProperties' fullname='com.dezza.ricepaper.ui.core:IDisplayObject/com.dezza.ricepaper.ui.core:IDisplayObject:accessibilityProperties/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flash.accessibility:AccessibilityProperties' param_defaults='undefined' result_type='void'>
</method>
<method name='alpha' fullname='com.dezza.ricepaper.ui.core:IDisplayObject/com.dezza.ricepaper.ui.core:IDisplayObject:alpha/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='blendMode' fullname='com.dezza.ricepaper.ui.core:IDisplayObject/com.dezza.ricepaper.ui.core:IDisplayObject:blendMode/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='cacheAsBitmap' fullname='com.dezza.ricepaper.ui.core:IDisplayObject/com.dezza.ricepaper.ui.core:IDisplayObject:cacheAsBitmap/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='filters' fullname='com.dezza.ricepaper.ui.core:IDisplayObject/com.dezza.ricepaper.ui.core:IDisplayObject:filters/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Array' param_defaults='undefined' result_type='void'>
</method>
<method name='height' fullname='com.dezza.ricepaper.ui.core:IDisplayObject/com.dezza.ricepaper.ui.core:IDisplayObject:height/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='mask' fullname='com.dezza.ricepaper.ui.core:IDisplayObject/com.dezza.ricepaper.ui.core:IDisplayObject:mask/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flash.display:DisplayObject' param_defaults='undefined' result_type='void'>
</method>
<method name='name' fullname='com.dezza.ricepaper.ui.core:IDisplayObject/com.dezza.ricepaper.ui.core:IDisplayObject:name/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='opaqueBackground' fullname='com.dezza.ricepaper.ui.core:IDisplayObject/com.dezza.ricepaper.ui.core:IDisplayObject:opaqueBackground/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Object' param_defaults='undefined' result_type='void'>
</method>
<method name='rotation' fullname='com.dezza.ricepaper.ui.core:IDisplayObject/com.dezza.ricepaper.ui.core:IDisplayObject:rotation/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='scale9Grid' fullname='com.dezza.ricepaper.ui.core:IDisplayObject/com.dezza.ricepaper.ui.core:IDisplayObject:scale9Grid/set' isStatic='false' isFinal='false' isOverride='false'  param_names='innerRectangle' param_types='flash.geom:Rectangle' param_defaults='undefined' result_type='void'>
</method>
<method name='scaleX' fullname='com.dezza.ricepaper.ui.core:IDisplayObject/com.dezza.ricepaper.ui.core:IDisplayObject:scaleX/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='scaleY' fullname='com.dezza.ricepaper.ui.core:IDisplayObject/com.dezza.ricepaper.ui.core:IDisplayObject:scaleY/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='scrollRect' fullname='com.dezza.ricepaper.ui.core:IDisplayObject/com.dezza.ricepaper.ui.core:IDisplayObject:scrollRect/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flash.geom:Rectangle' param_defaults='undefined' result_type='void'>
</method>
<method name='transform' fullname='com.dezza.ricepaper.ui.core:IDisplayObject/com.dezza.ricepaper.ui.core:IDisplayObject:transform/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flash.geom:Transform' param_defaults='undefined' result_type='void'>
</method>
<method name='visible' fullname='com.dezza.ricepaper.ui.core:IDisplayObject/com.dezza.ricepaper.ui.core:IDisplayObject:visible/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='width' fullname='com.dezza.ricepaper.ui.core:IDisplayObject/com.dezza.ricepaper.ui.core:IDisplayObject:width/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='x' fullname='com.dezza.ricepaper.ui.core:IDisplayObject/com.dezza.ricepaper.ui.core:IDisplayObject:x/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='y' fullname='com.dezza.ricepaper.ui.core:IDisplayObject/com.dezza.ricepaper.ui.core:IDisplayObject:y/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<interfaceRec name='IUIControl' fullname='com.dezza.ricepaper.ui.core:IUIControl' sourcefile='/Users/derek/Documents/work/libraries/as3/ricepaper.dezza.com/src/com/dezza/ricepaper/ui/core/IUIControl.as' namespace='com.dezza.ricepaper.ui.core' access='public' baseClasses='com.dezza.ricepaper.ui.core:IDisplayObject;com.dezza.ricepaper.ui.core:IEnableable' isFinal='false' isDynamic='false' >
<description><![CDATA[
  ]]></description>
<author><![CDATA[derek
  ]]></author>
</interfaceRec>
<method name='destroy' fullname='com.dezza.ricepaper.ui.core:IUIControl/com.dezza.ricepaper.ui.core:IUIControl:destroy' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
   make control available for GC
   ]]></description>
</method>
<method name='asset' fullname='com.dezza.ricepaper.ui.core:IUIControl/com.dezza.ricepaper.ui.core:IUIControl:asset/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.display:MovieClip'>
<description><![CDATA[
   get the content asset
   
   ]]></description>
<return><![CDATA[MovieClip
   ]]></return>
</method>
<classRec name='UIControl' fullname='com.dezza.ricepaper.ui.core:UIControl' sourcefile='/Users/derek/Documents/work/libraries/as3/ricepaper.dezza.com/src/com/dezza/ricepaper/ui/core/UIControl.as' namespace='com.dezza.ricepaper.ui.core' access='public' baseclass='flash.display:Sprite' interfaces='com.dezza.ricepaper.ui.core:IUIControl' isFinal='false' isDynamic='false' >
<description><![CDATA[
  UIControl
  
  Abstract Superclass for UIControls
  
  <p>UIControls are intended to be AS3 UI components that contain
  a visual asset and some code to control the interaction</p>
  
  <p>assets can either be already attached to some parent, which 
  may be convenient if creating layouts in the Flash IDE, or can
  be supplied as a new unattached instance.</p>
  
  <p>The UIControl is a display object too, so it will attach the 
  asset content and then (if the child was already attached)
  add itself in place of the asset.</p>
  
  <p>This gives us the best of both worlds; visual assets that are
  free of any code references, but code assets that are part of the
  display list and can access stage properties, display list events
  etc.</p>
    ]]></description>
<author><![CDATA[Derek McKenna
  ]]></author>
<version><![CDATA[1.0
  ]]></version>
<since><![CDATA[Feb 15, 2009
  ]]></since>
</classRec>
<method name='UIControl' fullname='com.dezza.ricepaper.ui.core:UIControl/UIControl' isStatic='false' isFinal='false' isOverride='false'  param_names='content' param_types='flash.display:MovieClip' param_defaults='undefined' result_type='*'>
<description><![CDATA[
   Constructor
   
   <p>if content is already attached to a parent the UIControl 
   will attach itself in place and add the asset as it's child</p>
   
   ]]></description>
<param><![CDATA[content MovieClip 
   ]]></param>
</method>
<method name='asDisplayObject' fullname='com.dezza.ricepaper.ui.core:UIControl/asDisplayObject' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.display:DisplayObject'>
</method>
<method name='destroy' fullname='com.dezza.ricepaper.ui.core:UIControl/destroy' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
   
   make control available for GC
   ]]></description>
</method>
<method name='asset' fullname='com.dezza.ricepaper.ui.core:UIControl/asset/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.display:MovieClip'>
<description><![CDATA[
   
   get the content asset
   
   ]]></description>
<return><![CDATA[MovieClip
   ]]></return>
</method>
<method name='enabled' fullname='com.dezza.ricepaper.ui.core:UIControl/enabled/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[
   
   get enabled
   
   ]]></description>
<return><![CDATA[Boolean true if enabled
   ]]></return>
</method>
<method name='enabled' fullname='com.dezza.ricepaper.ui.core:UIControl/enabled/set' isStatic='false' isFinal='false' isOverride='false'  param_names='enabled' param_types='Boolean' param_defaults='undefined' result_type='void'>
<description><![CDATA[
   
   set enabled
   
   ]]></description>
<param><![CDATA[enabled Boolean
   ]]></param>
</method>
<field name='_content' fullname='com.dezza.ricepaper.ui.core:UIControl/protected:_content' type='flash.display:MovieClip' isStatic='false' isConst='false' >
<description><![CDATA[
   ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_enabled' fullname='com.dezza.ricepaper.ui.core:UIControl/private:_enabled' type='Boolean' isStatic='false' isConst='false' >
<description><![CDATA[
   ]]></description>
<private><![CDATA[]]></private>
</field>
<classRec name='ButtonState' fullname='com.dezza.ricepaper.ui.button:ButtonState' sourcefile='/Users/derek/Documents/work/libraries/as3/ricepaper.dezza.com/src/com/dezza/ricepaper/ui/button/ButtonState.as' namespace='com.dezza.ricepaper.ui.button' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[
  ]]></description>
<author><![CDATA[derek
  
  constants for button states 
  
  button assets should use these values as frame labels for a particular state
  ]]></author>
</classRec>
<field name='DISABLED' fullname='com.dezza.ricepaper.ui.button:ButtonState/DISABLED' type='String' isStatic='true' isConst='true' defaultValue='disabled' >
<description><![CDATA[
   Represents button state of 'disabled'
   ]]></description>
</field>
<field name='OFF' fullname='com.dezza.ricepaper.ui.button:ButtonState/OFF' type='String' isStatic='true' isConst='true' defaultValue='off' >
<description><![CDATA[
   Represents button state of 'off' (or mouse out)
   ]]></description>
</field>
<field name='OFF_SELECTED' fullname='com.dezza.ricepaper.ui.button:ButtonState/OFF_SELECTED' type='String' isStatic='true' isConst='true' defaultValue='offSelected' >
<description><![CDATA[
   Represents button state of 'off' and 'selected'
   ]]></description>
</field>
<field name='ON' fullname='com.dezza.ricepaper.ui.button:ButtonState/ON' type='String' isStatic='true' isConst='true' defaultValue='on' >
<description><![CDATA[
   Represents button state of 'on' (or mouse over)
   ]]></description>
</field>
<field name='ON_SELECTED' fullname='com.dezza.ricepaper.ui.button:ButtonState/ON_SELECTED' type='String' isStatic='true' isConst='true' defaultValue='onSelected' >
<description><![CDATA[
   Represents button state of 'on' and 'selected'
   ]]></description>
</field>
<interfaceRec name='IButton' fullname='com.dezza.ricepaper.ui.button:IButton' sourcefile='/Users/derek/Documents/work/libraries/as3/ricepaper.dezza.com/src/com/dezza/ricepaper/ui/button/IButton.as' namespace='com.dezza.ricepaper.ui.button' access='public' baseClasses='com.dezza.ricepaper.ui.core:IUIControl;com.dezza.ricepaper.ui.core:IHighlightable' isFinal='false' isDynamic='false' >
<description><![CDATA[
  ]]></description>
<author><![CDATA[derek
  ]]></author>
</interfaceRec>
<method name='mouseStateLocked' fullname='com.dezza.ricepaper.ui.button:IButton/com.dezza.ricepaper.ui.button:IButton:mouseStateLocked/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[
   get whether or not the mouse state is currently locked
   
   ]]></description>
<return><![CDATA[Boolean
   ]]></return>
</method>
<method name='mouseStateLocked' fullname='com.dezza.ricepaper.ui.button:IButton/com.dezza.ricepaper.ui.button:IButton:mouseStateLocked/set' isStatic='false' isFinal='false' isOverride='false'  param_names='locked' param_types='Boolean' param_defaults='undefined' result_type='void'>
<description><![CDATA[
   set the mouse state to be locked
   
   when the mouse state is locked attempts to set the mouseState will have no immediate effect,
   but will be remembered and applied if and when the mouseState is unlocked
   
   ]]></description>
<param><![CDATA[locked Boolean
   ]]></param>
</method>
<interfaceRec name='ILabelButton' fullname='com.dezza.ricepaper.ui.button:ILabelButton' sourcefile='/Users/derek/Documents/work/libraries/as3/ricepaper.dezza.com/src/com/dezza/ricepaper/ui/button/ILabelButton.as' namespace='com.dezza.ricepaper.ui.button' access='public' baseClasses='com.dezza.ricepaper.ui.button:IButton;com.dezza.ricepaper.ui.core:ILabel' isFinal='false' isDynamic='false' >
<description><![CDATA[
  ]]></description>
<author><![CDATA[derek
  ]]></author>
</interfaceRec>
<classRec name='Button' fullname='com.dezza.ricepaper.ui.button:Button' sourcefile='/Users/derek/Documents/work/libraries/as3/ricepaper.dezza.com/src/com/dezza/ricepaper/ui/button/Button.as' namespace='com.dezza.ricepaper.ui.button' access='public' baseclass='com.dezza.ricepaper.ui.core:UIControl' interfaces='com.dezza.ricepaper.ui.button:IButton' isFinal='false' isDynamic='false' >
<description><![CDATA[
  ]]></description>
<author><![CDATA[derek
  ]]></author>
</classRec>
<method name='Button' fullname='com.dezza.ricepaper.ui.button:Button/Button' isStatic='false' isFinal='false' isOverride='false'  param_names='content' param_types='flash.display:MovieClip' param_defaults='undefined' result_type='*'>
</method>
<method name='autoAddHitArea' fullname='com.dezza.ricepaper.ui.button:Button/autoAddHitArea' isStatic='false' isFinal='false' isOverride='false'  param_names='debug' param_types='Boolean' param_defaults='false' result_type='void'>
<description><![CDATA[
   automatically create a hit area
   
   <p>usefull for text only or other assets that have irregular edges.</p>
   
   <p>Note: uses the bounds of the asset at the time called and doesn't
   take into account any masks etc</p>
   ]]></description>
</method>
<method name='destroy' fullname='com.dezza.ricepaper.ui.button:Button/destroy' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[
   
   
   make control available for GC
   ]]></description>
</method>
<method name='initMouse' fullname='com.dezza.ricepaper.ui.button:Button/protected:initMouse' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
   ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='onRollOut' fullname='com.dezza.ricepaper.ui.button:Button/protected:onRollOut' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[
   ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='onRollOver' fullname='com.dezza.ricepaper.ui.button:Button/protected:onRollOver' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[
   ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='renderState' fullname='com.dezza.ricepaper.ui.button:Button/protected:renderState' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
   ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='setMouseState' fullname='com.dezza.ricepaper.ui.button:Button/protected:setMouseState' isStatic='false' isFinal='false' isOverride='false'  param_names='mouseState' param_types='String' param_defaults='undefined' result_type='void'>
<description><![CDATA[
   ]]></description>
<param><![CDATA[mouseState String representing mouse state
   
   ]]></param>
<private><![CDATA[]]></private>
</method>
<method name='highlighted' fullname='com.dezza.ricepaper.ui.button:Button/highlighted/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[
   get the button's highlighted (on/off) state
   
   ]]></description>
<return><![CDATA[Boolean true if button is on
   ]]></return>
</method>
<method name='mouseStateLocked' fullname='com.dezza.ricepaper.ui.button:Button/mouseStateLocked/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[
   
   get whether or not the mouse state is currently locked
   
   ]]></description>
<return><![CDATA[Boolean
   ]]></return>
</method>
<method name='enabled' fullname='com.dezza.ricepaper.ui.button:Button/enabled/set' isStatic='false' isFinal='false' isOverride='true'  param_names='enabled' param_types='Boolean' param_defaults='undefined' result_type='void'>
<description><![CDATA[
   
   
   set enabled
   
   ]]></description>
<param><![CDATA[enabled Boolean
   ]]></param>
</method>
<method name='highlighted' fullname='com.dezza.ricepaper.ui.button:Button/highlighted/set' isStatic='false' isFinal='false' isOverride='false'  param_names='highlighted' param_types='Boolean' param_defaults='undefined' result_type='void'>
<description><![CDATA[
   set the button's highlighted (on/off) state manually
   
   ]]></description>
<param><![CDATA[highlighted Boolean true to set button to on
   ]]></param>
</method>
<method name='mouseStateLocked' fullname='com.dezza.ricepaper.ui.button:Button/mouseStateLocked/set' isStatic='false' isFinal='false' isOverride='false'  param_names='locked' param_types='Boolean' param_defaults='undefined' result_type='void'>
<description><![CDATA[
   
   set the mouse state to be locked
   
   when the mouse state is locked attempts to set the mouseState will have no immediate effect,
   but will be remembered and applied if and when the mouseState is unlocked
   
   ]]></description>
<param><![CDATA[locked Boolean
   ]]></param>
</method>
<field name='_mouseState' fullname='com.dezza.ricepaper.ui.button:Button/protected:_mouseState' type='String' isStatic='false' isConst='false' >
<description><![CDATA[
   ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_mouseStateLocked' fullname='com.dezza.ricepaper.ui.button:Button/protected:_mouseStateLocked' type='Boolean' isStatic='false' isConst='false' >
<description><![CDATA[
   ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_unlockedMouseState' fullname='com.dezza.ricepaper.ui.button:Button/protected:_unlockedMouseState' type='String' isStatic='false' isConst='false' >
<description><![CDATA[
   ]]></description>
<private><![CDATA[]]></private>
</field>
<classRec name='LabelButton' fullname='com.dezza.ricepaper.ui.button:LabelButton' sourcefile='/Users/derek/Documents/work/libraries/as3/ricepaper.dezza.com/src/com/dezza/ricepaper/ui/button/LabelButton.as' namespace='com.dezza.ricepaper.ui.button' access='public' baseclass='com.dezza.ricepaper.ui.button:Button' interfaces='com.dezza.ricepaper.ui.button:ILabelButton' isFinal='false' isDynamic='false' >
<description><![CDATA[
  ]]></description>
<author><![CDATA[derek
  
  Extends Button by adding a <code>TextField</code> label property 
  ]]></author>
</classRec>
<method name='LabelButton' fullname='com.dezza.ricepaper.ui.button:LabelButton/LabelButton' isStatic='false' isFinal='false' isOverride='false'  param_names='content;textField' param_types='flash.display:MovieClip;flash.text:TextField' param_defaults='undefined;undefined' result_type='*'>
</method>
<method name='text' fullname='com.dezza.ricepaper.ui.button:LabelButton/text/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
   
   get label text
   
   ]]></description>
<return><![CDATA[String
   ]]></return>
</method>
<method name='textField' fullname='com.dezza.ricepaper.ui.button:LabelButton/textField/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.text:TextField'>
<description><![CDATA[
   
   get textfield
   
   ]]></description>
<return><![CDATA[TextField
   ]]></return>
</method>
<method name='text' fullname='com.dezza.ricepaper.ui.button:LabelButton/text/set' isStatic='false' isFinal='false' isOverride='false'  param_names='text' param_types='String' param_defaults='undefined' result_type='void'>
<description><![CDATA[
   
   set label text
   
   ]]></description>
<param><![CDATA[text String
   ]]></param>
</method>
<field name='_textField' fullname='com.dezza.ricepaper.ui.button:LabelButton/protected:_textField' type='flash.text:TextField' isStatic='false' isConst='false' >
<description><![CDATA[
   ]]></description>
<private><![CDATA[]]></private>
</field>
<interfaceRec name='IDraggerListener' fullname='com.dezza.ricepaper.ui.dragger:IDraggerListener' sourcefile='/Users/derek/Documents/work/libraries/as3/ricepaper.dezza.com/src/com/dezza/ricepaper/ui/dragger/IDraggerListener.as' namespace='com.dezza.ricepaper.ui.dragger' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[
  DraggerListener
    <p>Classes wishing to listen to all Dragger events
  via the Dragger.addDraggerListener method
  should implement this</p>
    ]]></description>
<author><![CDATA[Derek McKenna
  ]]></author>
<version><![CDATA[1.0
  ]]></version>
<since><![CDATA[Feb 15, 2009
  ]]></since>
</interfaceRec>
<method name='onDragChange' fullname='com.dezza.ricepaper.ui.dragger:IDraggerListener/com.dezza.ricepaper.ui.dragger:IDraggerListener:onDragChange' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[
   handle DraggerEvent.DRAG_CHANGE event
   
   ]]></description>
<param><![CDATA[e DraggerEvent instance
   ]]></param>
</method>
<method name='onDragStart' fullname='com.dezza.ricepaper.ui.dragger:IDraggerListener/com.dezza.ricepaper.ui.dragger:IDraggerListener:onDragStart' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[
   handle DraggerEvent.DRAG_START event
   
   ]]></description>
<param><![CDATA[e DraggerEvent instance
   ]]></param>
</method>
<method name='onDragStop' fullname='com.dezza.ricepaper.ui.dragger:IDraggerListener/com.dezza.ricepaper.ui.dragger:IDraggerListener:onDragStop' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[
   handle DraggerEvent.DRAG_STOP event
   
   ]]></description>
<param><![CDATA[e DraggerEvent instance
   ]]></param>
</method>
<classRec name='DraggerEvent' fullname='com.dezza.ricepaper.ui.dragger:DraggerEvent' sourcefile='/Users/derek/Documents/work/libraries/as3/ricepaper.dezza.com/src/com/dezza/ricepaper/ui/dragger/DraggerEvent.as' namespace='com.dezza.ricepaper.ui.dragger' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
<description><![CDATA[
  ]]></description>
<author><![CDATA[derek
  ]]></author>
</classRec>
<method name='DraggerEvent' fullname='com.dezza.ricepaper.ui.dragger:DraggerEvent/DraggerEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='type;bubbles;cancelable;data' param_types='String;Boolean;Boolean;Object' param_defaults='undefined;false;false;null' result_type='*'>
<description><![CDATA[
   Construct new DraggerEvent instance
   ]]></description>
</method>
<method name='clone' fullname='com.dezza.ricepaper.ui.dragger:DraggerEvent/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.events:Event'>
<description><![CDATA[
   ]]></description>
</method>
<field name='DRAG_CHANGE' fullname='com.dezza.ricepaper.ui.dragger:DraggerEvent/DRAG_CHANGE' type='String' isStatic='true' isConst='true' defaultValue='DraggerEvent.DRAG_CHANGE' >
<description><![CDATA[
   Event type indicating dragger postion change
   ]]></description>
</field>
<field name='DRAG_START' fullname='com.dezza.ricepaper.ui.dragger:DraggerEvent/DRAG_START' type='String' isStatic='true' isConst='true' defaultValue='DraggerEvent.DRAG_START' >
<description><![CDATA[
   Event type indicating dragging has started
   ]]></description>
</field>
<field name='DRAG_STOP' fullname='com.dezza.ricepaper.ui.dragger:DraggerEvent/DRAG_STOP' type='String' isStatic='true' isConst='true' defaultValue='DraggerEvent.DRAG_STOP' >
<description><![CDATA[
   Event type indication dragging has stopped
   ]]></description>
</field>
<field name='data' fullname='com.dezza.ricepaper.ui.dragger:DraggerEvent/data' type='Object' isStatic='false' isConst='false' >
<description><![CDATA[
   event data payload
   ]]></description>
</field>
<interfaceRec name='IDragger' fullname='com.dezza.ricepaper.ui.dragger:IDragger' sourcefile='/Users/derek/Documents/work/libraries/as3/ricepaper.dezza.com/src/com/dezza/ricepaper/ui/dragger/IDragger.as' namespace='com.dezza.ricepaper.ui.dragger' access='public' baseClasses='com.dezza.ricepaper.ui.core:IUIControl' isFinal='false' isDynamic='false' >
<description><![CDATA[
  Dragger
  Class Description.
    ]]></description>
<author><![CDATA[Derek McKenna
  ]]></author>
<version><![CDATA[1.0
  ]]></version>
<since><![CDATA[Feb 15, 2009
  ]]></since>
</interfaceRec>
<method name='addDraggerListener' fullname='com.dezza.ricepaper.ui.dragger:IDragger/com.dezza.ricepaper.ui.dragger:IDragger:addDraggerListener' isStatic='false' isFinal='false' isOverride='false'  param_names='listener' param_types='com.dezza.ricepaper.ui.dragger:IDraggerListener' param_defaults='undefined' result_type='void'>
</method>
<method name='removeDraggerListener' fullname='com.dezza.ricepaper.ui.dragger:IDragger/com.dezza.ricepaper.ui.dragger:IDragger:removeDraggerListener' isStatic='false' isFinal='false' isOverride='false'  param_names='listener' param_types='com.dezza.ricepaper.ui.dragger:IDraggerListener' param_defaults='undefined' result_type='void'>
</method>
<method name='setDragRect' fullname='com.dezza.ricepaper.ui.dragger:IDragger/com.dezza.ricepaper.ui.dragger:IDragger:setDragRect' isStatic='false' isFinal='false' isOverride='false'  param_names='rect' param_types='flash.geom:Rectangle' param_defaults='undefined' result_type='void'>
</method>
<method name='startDragging' fullname='com.dezza.ricepaper.ui.dragger:IDragger/com.dezza.ricepaper.ui.dragger:IDragger:startDragging' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='stopDragging' fullname='com.dezza.ricepaper.ui.dragger:IDragger/com.dezza.ricepaper.ui.dragger:IDragger:stopDragging' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='isDragging' fullname='com.dezza.ricepaper.ui.dragger:IDragger/com.dezza.ricepaper.ui.dragger:IDragger:isDragging/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<classRec name='Dragger' fullname='com.dezza.ricepaper.ui.dragger:Dragger' sourcefile='/Users/derek/Documents/work/libraries/as3/ricepaper.dezza.com/src/com/dezza/ricepaper/ui/dragger/Dragger.as' namespace='com.dezza.ricepaper.ui.dragger' access='public' baseclass='com.dezza.ricepaper.ui.core:UIControl' interfaces='com.dezza.ricepaper.ui.dragger:IDragger' isFinal='false' isDynamic='false' >
<description><![CDATA[
  BasicDragger
  
  Abstracts dragging functionality and provides and event system for
  the following events:
  
  dragging starts;
  dragged asset changes;
  dragging ends.
    see <code>com.dezza.ricepaper.ui.dragger.DraggerEvent</code>
    ]]></description>
<author><![CDATA[Derek McKenna
  ]]></author>
<version><![CDATA[1.0
  ]]></version>
<since><![CDATA[Feb 15, 2009
  ]]></since>
</classRec>
<method name='Dragger' fullname='com.dezza.ricepaper.ui.dragger:Dragger/Dragger' isStatic='false' isFinal='false' isOverride='false'  param_names='asset;dragRect;buttonMode' param_types='flash.display:MovieClip;flash.geom:Rectangle;Boolean' param_defaults='undefined;null;true' result_type='*'>
<description><![CDATA[
   Construct new Dragger instance
   
   ]]></description>
<param><![CDATA[asset MovieClip instance containing visuals
   
   ]]></param>
<param><![CDATA[dragRect bounds for dragging ops
   
   ]]></param>
<param><![CDATA[buttonMode Boolean true to use button cursor (default true)
   ]]></param>
</method>
<method name='_onMouseUp' fullname='com.dezza.ricepaper.ui.dragger:Dragger/protected:_onMouseUp' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[
   ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='addDraggerListener' fullname='com.dezza.ricepaper.ui.dragger:Dragger/addDraggerListener' isStatic='false' isFinal='false' isOverride='false'  param_names='listener' param_types='com.dezza.ricepaper.ui.dragger:IDraggerListener' param_defaults='undefined' result_type='void'>
<description><![CDATA[
   add a listener to all Dragger events
   
   ]]></description>
<param><![CDATA[listener <code>com.dezza.ricepaper.ui.dragger.DraggerListener</code> implementation
   ]]></param>
</method>
<method name='destroy' fullname='com.dezza.ricepaper.ui.dragger:Dragger/destroy' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[
   
   
   make control available for GC
   ]]></description>
</method>
<method name='dispatchChangeEvent' fullname='com.dezza.ricepaper.ui.dragger:Dragger/protected:dispatchChangeEvent' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
   ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='init' fullname='com.dezza.ricepaper.ui.dragger:Dragger/protected:init' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
   ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='onEnterFrme' fullname='com.dezza.ricepaper.ui.dragger:Dragger/protected:onEnterFrme' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='null' result_type='void'>
<description><![CDATA[
   ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='onMouseDown' fullname='com.dezza.ricepaper.ui.dragger:Dragger/protected:onMouseDown' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='null' result_type='void'>
<description><![CDATA[
   ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='removeDraggerListener' fullname='com.dezza.ricepaper.ui.dragger:Dragger/removeDraggerListener' isStatic='false' isFinal='false' isOverride='false'  param_names='listener' param_types='com.dezza.ricepaper.ui.dragger:IDraggerListener' param_defaults='undefined' result_type='void'>
<description><![CDATA[
   remove a listener from all Dragger events
   
   ]]></description>
<param><![CDATA[listener <code>com.dezza.ricepaper.ui.dragger.DraggerListener</code> implementation
   ]]></param>
</method>
<method name='setDragRect' fullname='com.dezza.ricepaper.ui.dragger:Dragger/setDragRect' isStatic='false' isFinal='false' isOverride='false'  param_names='rect' param_types='flash.geom:Rectangle' param_defaults='undefined' result_type='void'>
<description><![CDATA[
   update the dragRect bounds
   
   ]]></description>
<param><![CDATA[rect <code>flash.geomRectangle</code> instance
   ]]></param>
</method>
<method name='startDragging' fullname='com.dezza.ricepaper.ui.dragger:Dragger/startDragging' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
   ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='stopDragging' fullname='com.dezza.ricepaper.ui.dragger:Dragger/stopDragging' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
   ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='isDragging' fullname='com.dezza.ricepaper.ui.dragger:Dragger/isDragging/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[
   ]]></description>
<return><![CDATA[Boolean true if a drag operation is currently in progress
   ]]></return>
</method>
<method name='enabled' fullname='com.dezza.ricepaper.ui.dragger:Dragger/enabled/set' isStatic='false' isFinal='false' isOverride='true'  param_names='b' param_types='Boolean' param_defaults='undefined' result_type='void'>
<description><![CDATA[
   
   
   set enabled
   
   ]]></description>
<param><![CDATA[enabled Boolean
   ]]></param>
</method>
<field name='_buttonMode' fullname='com.dezza.ricepaper.ui.dragger:Dragger/protected:_buttonMode' type='Boolean' isStatic='false' isConst='false' >
<description><![CDATA[
   ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_dragRect' fullname='com.dezza.ricepaper.ui.dragger:Dragger/protected:_dragRect' type='flash.geom:Rectangle' isStatic='false' isConst='false' >
<description><![CDATA[
   ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_dragging' fullname='com.dezza.ricepaper.ui.dragger:Dragger/protected:_dragging' type='Boolean' isStatic='false' isConst='false' >
<description><![CDATA[
   ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_lastX' fullname='com.dezza.ricepaper.ui.dragger:Dragger/protected:_lastX' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[
   ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_lastY' fullname='com.dezza.ricepaper.ui.dragger:Dragger/protected:_lastY' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[
   ]]></description>
<private><![CDATA[]]></private>
</field>
<interfaceRec name='ISlider' fullname='com.dezza.ricepaper.ui.slider:ISlider' sourcefile='/Users/derek/Documents/work/libraries/as3/ricepaper.dezza.com/src/com/dezza/ricepaper/ui/slider/ISlider.as' namespace='com.dezza.ricepaper.ui.slider' access='public' baseClasses='com.dezza.ricepaper.ui.dragger:IDragger' isFinal='false' isDynamic='false' >
<description><![CDATA[
  Slider
  Class description.
    ]]></description>
<author><![CDATA[Derek McKenna
  ]]></author>
<since><![CDATA[ 11 Aug 2008
  ]]></since>
</interfaceRec>
<method name='axis' fullname='com.dezza.ricepaper.ui.slider:ISlider/com.dezza.ricepaper.ui.slider:ISlider:axis/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='percent' fullname='com.dezza.ricepaper.ui.slider:ISlider/com.dezza.ricepaper.ui.slider:ISlider:percent/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='percent' fullname='com.dezza.ricepaper.ui.slider:ISlider/com.dezza.ricepaper.ui.slider:ISlider:percent/set' isStatic='false' isFinal='false' isOverride='false'  param_names='percent' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<classRec name='Slider' fullname='com.dezza.ricepaper.ui.slider:Slider' sourcefile='/Users/derek/Documents/work/libraries/as3/ricepaper.dezza.com/src/com/dezza/ricepaper/ui/slider/Slider.as' namespace='com.dezza.ricepaper.ui.slider' access='public' baseclass='com.dezza.ricepaper.ui.dragger:Dragger' interfaces='com.dezza.ricepaper.ui.slider:ISlider' isFinal='false' isDynamic='false' >
<description><![CDATA[
  ]]></description>
<author><![CDATA[derek
  ]]></author>
</classRec>
<method name='Slider' fullname='com.dezza.ricepaper.ui.slider:Slider/Slider' isStatic='false' isFinal='false' isOverride='false'  param_names='content;dragRect;buttonMode;startingPercent;track;axis' param_types='flash.display:MovieClip;flash.geom:Rectangle;Boolean;Number;flash.display:Sprite;String' param_defaults='undefined;null;true;0.25;null;x' result_type='*'>
<description><![CDATA[
   construct Slider instance
   
   ]]></description>
<param><![CDATA[dragger MovieClip asset
   
   ]]></param>
<param><![CDATA[dragRect Rectangle containing slider bounds - note dimension opposite to axis will be ignored
   
   ]]></param>
<param><![CDATA[buttonMode Boolean indicating whether or not use buttonMode on the dragger
   
   ]]></param>
<param><![CDATA[startingPercent Number initial dragger position as a percentage between min and max
   
   ]]></param>
<param><![CDATA[track MovieClip optional element to use as clickable track element that will reposition slider
   
   ]]></param>
<param><![CDATA[axis String either 'x' or 'y' to use as the axis of dragging
   ]]></param>
</method>
<method name='setAxis' fullname='com.dezza.ricepaper.ui.slider:Slider/private:setAxis' isStatic='false' isFinal='false' isOverride='false'  param_names='axis' param_types='String' param_defaults='undefined' result_type='void'>
<description><![CDATA[
   ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='setDragRect' fullname='com.dezza.ricepaper.ui.slider:Slider/setDragRect' isStatic='false' isFinal='false' isOverride='true'  param_names='rect' param_types='flash.geom:Rectangle' param_defaults='undefined' result_type='void'>
<description><![CDATA[
   set the bounds of the slider
   
   note dimensions opposite to axis will be ignored
   
   ]]></description>
<param><![CDATA[rect Rectangle containing min and max slider postions
   
   ]]></param>
</method>
<method name='updatePos' fullname='com.dezza.ricepaper.ui.slider:Slider/updatePos' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='axis' fullname='com.dezza.ricepaper.ui.slider:Slider/axis/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
   get the axis
   
   ]]></description>
<return><![CDATA[String instance "x" or "y"
   ]]></return>
</method>
<method name='dragMax' fullname='com.dezza.ricepaper.ui.slider:Slider/dragMax/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='dragMin' fullname='com.dezza.ricepaper.ui.slider:Slider/dragMin/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='percent' fullname='com.dezza.ricepaper.ui.slider:Slider/percent/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[
   get the slider percentage
   
   ]]></description>
<return><![CDATA[Number between 0 and 1
   ]]></return>
</method>
<method name='percent' fullname='com.dezza.ricepaper.ui.slider:Slider/percent/set' isStatic='false' isFinal='false' isOverride='false'  param_names='percent' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[
   set dragger position as percent 
   
   0 would set dragger to minimum position
   1 would set dragger to maximum position
   
   ]]></description>
<param><![CDATA[percent Number between 0 and 1
   ]]></param>
</method>
<field name='_axis' fullname='com.dezza.ricepaper.ui.slider:Slider/protected:_axis' type='String' isStatic='false' isConst='false' >
</field>
<field name='_percent' fullname='com.dezza.ricepaper.ui.slider:Slider/protected:_percent' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_track' fullname='com.dezza.ricepaper.ui.slider:Slider/protected:_track' type='flash.display:Sprite' isStatic='false' isConst='false' >
</field>
<classRec name='RicePaperUIMain' fullname='com.dezza.ricepaper.examples:RicePaperUIMain' sourcefile='/Users/derek/Documents/work/libraries/as3/ricepaper.dezza.com/src/com/dezza/ricepaper/examples/RicePaperUIMain.as' namespace='com.dezza.ricepaper.examples' access='public' baseclass='flash.display:MovieClip' isFinal='false' isDynamic='false' >
<description><![CDATA[
  ]]></description>
<author><![CDATA[dezza
  ]]></author>
</classRec>
<method name='RicePaperUIMain' fullname='com.dezza.ricepaper.examples:RicePaperUIMain/RicePaperUIMain' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
</asdoc>
